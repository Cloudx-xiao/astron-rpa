<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iflytek.rpa.base.dao.CGroupDao">

    <resultMap type="com.iflytek.rpa.base.entity.CGroup" id="CGroupMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="groupId" column="group_id" jdbcType="VARCHAR"/>
        <result property="groupName" column="group_name" jdbcType="VARCHAR"/>
        <result property="creatorId" column="creator_id" jdbcType="CHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updaterId" column="updater_id" jdbcType="CHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
        <result property="robotId" column="robot_id" jdbcType="VARCHAR"/>
        <result property="robotVersion" column="robot_version" jdbcType="INTEGER"/>
        <result property="elementType" column="element_type" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="getGroupByGroupName" resultMap="CGroupMap">
        select *
        from c_group
        where group_name = #{groupName}
          and deleted = 0
          and creator_id = #{creatorId}
          and robot_id = #{robotId}
          and robot_version = #{robotVersion}
          and element_type = #{elementType} limit 1
    </select>

    <insert id="insertGroup">
        insert into c_group
        (group_id,
         group_name,
         creator_id,
         create_time,
         updater_id,
         update_time,
         deleted,
         robot_id,
         robot_version,
         element_type)
        values (#{groupId},
                #{groupName},
                #{creatorId},
                now(),
                #{updaterId},
                now(),
                0,
                #{robotId},
                #{robotVersion},
                #{elementType})
    </insert>

    <update id="updateGroup">
        update c_group
        set group_name  = #{groupName},
            update_time = now()
        where deleted = 0
          and robot_id = #{robotId}
          and robot_version = #{robotVersion}
          and group_id = #{groupId}
          and creator_id = #{creatorId}
    </update>


    <update id="deleteGroup">
        update c_group
        set deleted = 1
        where
        deleted = 0
        and robot_id = #{robotId}
        and robot_version = #{robotVersion}
        <if test="groupId != null and groupId != ''">
            and group_id = #{groupId}
        </if>
        <if test="creatorId != null">
            and creator_id = #{creatorId}
        </if>
    </update>


    <select id="getGroupSameName" resultMap="CGroupMap">
        select *
        from c_group
        where
        BINARY group_name = #{groupName}
        and element_type = #{elementType}
        and deleted = 0
        and creator_id = #{creatorId}
        <if test="groupId != null and groupId != ''">
            and group_id != #{groupId}
        </if>
        and robot_id = #{robotId}
        and robot_version = #{robotVersion}
        limit 1
    </select>

    <select id="getGroupById" resultMap="CGroupMap">
        select *
        from c_group
        where group_id = #{groupId}
          and deleted = 0
          and robot_id = #{robotId}
          and robot_version = #{robotVersion} limit 1
    </select>

    <select id="getGroupByRobotId" resultMap="CGroupMap">
        select *
        from c_group
        where robot_id = #{robotId}
          and robot_version = #{robotVersion}
          and deleted = 0
          and element_type = #{elementType}
    </select>


    <insert id="createGroupForCurrentVersion">
        insert into c_group
        (group_id,
         group_name,
         creator_id,
         create_time,
         updater_id,
         update_time,
         deleted,
         robot_id,
         robot_version,
         element_type)
        select group_id,
               group_name,
               creator_id,
               now(),
               updater_id,
               now(),
               deleted,
               robot_id,
               #{version},
               element_type
        from c_group
        where robot_id = #{robotId}
          and robot_version = 0
          and creator_id = #{creatorId}
          and deleted = 0

    </insert>


    <insert id="createGroupForObtainedVersion">
        insert into c_group
        (group_id,
         group_name,
         creator_id,
         create_time,
         updater_id,
         update_time,
         deleted,
         robot_id,
         robot_version,
         element_type)
        select group_id,
               group_name,
               #{obtainedRobotDesign.creatorId},
               now(),
               #{obtainedRobotDesign.updaterId},
               now(),
               0,
               #{obtainedRobotDesign.robotId},
               0,
               element_type
        from c_group
        where robot_id = #{authorRobotVersion.robotId}
          and robot_version = #{authorRobotVersion.version}
          and creator_id = #{authorRobotVersion.creatorId}
    </insert>


    <insert id="copyGroupBatch">
        insert into c_group
        (group_id,
         group_name,
         creator_id,
         create_time,
         updater_id,
         update_time,
         deleted,
         robot_id,
         robot_version,
         element_type)
        select group_id,
               group_name,
               creator_id,
               now(),
               updater_id,
               now(),
               0,
               #{newRobotId},
               0,
               element_type
        from c_group
        where robot_id = #{oldRobotId}
          and robot_version = 0
          and creator_id = #{userId}
          and deleted = 0
    </insert>
    <insert id="shareGroupBatch">
        insert into c_group (group_id,
                             group_name,
                             creator_id,
                             create_time,
                             updater_id,
                             update_time,
                             deleted,
                             robot_id,
                             robot_version,
                             element_type)
        select group_id,
               group_name,
               #{receivedUserId},
               now(),
               #{receivedUserId},
               now(),
               0,
               #{newRobotId},
               0,
               element_type
        from c_group
        where robot_id = #{oldRobotId}
          and creator_id = #{sharedUserId}
          and robot_version = 0
          and deleted = 0
    </insert>
</mapper>

